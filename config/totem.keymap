//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NUM  1
#define NAV  2
#define ADJ  3

#define ________ &trans

#define TAPPING_TERM 148
#define QUICK_TAP    150


&lt {
	flavor = "hold-preferred";
	tapping-term-ms = <TAPPING_TERM>;
	quick-tap-ms = <QUICK_TAP>;
};

&mt {
	flavor = "balanced";
	tapping-term-ms = <TAPPING_TERM>;
	quick-tap-ms = <QUICK_TAP>;
};

&caps_word {
	continue-list = <UNDER MINUS BSPC RSHFT LSHFT>;
};

/ {
	behaviors {
		gresc: grave_escape {
			label = "grave_escape";
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			mods = <(MOD_LGUI|MOD_RGUI)>;
			bindings = <&kp ESC>, <&kp GRAVE>;
		};
		ht: hold_tap {
			label = "hold_tap";
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <TAPPING_TERM>;
			quick-tap-ms = <QUICK_TAP>;
			global-quick-tap;
			bindings = <&kp>, <&kp>;
		};
		lht: left_positional_hold_tap {
			label = "left_positional_hold_tap";
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <TAPPING_TERM>;
			quick-tap-ms = <QUICK_TAP>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <
							5  6  7  8  9
			10 11 12 13    15 16 17 18 19
						   25 26 27 28 29
				  30 31 32 33>;
		};
		rht: right_positional_hold_tap {
			label = "right_positional_hold_tap";
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <TAPPING_TERM>;
			quick-tap-ms = <QUICK_TAP>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <
			 0  1  2  3  4
			10 11 12 13 14    16 17 18 19
			20 21 22 23 24
						30 31 32 33>;
		};
	};
};

#define MACRO(name, keys)             \
name: name##_macro {                  \
	label = #name;                    \
	compatible = "zmk,behavior-macro";\
	#binding-cells = <0>;             \
	tap-ms = <1>;                     \
	wait-ms = <1>;                    \
	bindings = <keys>;                \
};

/ {
	macros {
    MACRO(comment, &kp G &kp C)
		MACRO(vim_q,  &kp COLON &kp Q &kp EXCL &kp ENTER)
		MACRO(vim_s,  &kp COLON &kp W &kp Q &kp ENTER)
		MACRO(vim_w,  &kp ESC &kp COLON &kp W &kp ENTER)
    MACRO(vim_wa, &kp ESC &kp COLON &kp W &kp A &kp ENTER)
		MACRO(dir_up, &kp DOT &kp DOT &kp FSLH)
    MACRO(open_gitcommit, &kp SPACE &kp LC(G))
    MACRO(lazy_git, &kp L &kp G &kp ENTER)
    MACRO(nvim, &kp N &kp V &kp ENTER)
 };
};

#define COMBO(name, keypress, keypos) \
combo_##name {                        \
	timeout-ms = <40>;                \
	bindings = <keypress>;            \
	key-positions = <keypos>;         \
};
/* Combo key positions
    0  1  2  3  4         5  6  7  8  9
   10 11 12 13 14        15 16 17 18 19
20 21 22 23 24 25        26 27 28 29 30 31
			   32 33 34        35 36 37            */

/ {
	combos {
		compatible = "zmk,combos";
		//gaming
		COMBO(tog_gaming, &tog GAME, 0 9)
		//bluetooth
		COMBO(blu0, &bt BT_SEL 0, 4 5)
		COMBO(blu1, &bt BT_SEL 1, 14 15)
		COMBO(blu_clear, &bt BT_CLR, 24 25)
		// horizontal
		// // main 
		COMBO(esc, &kp ESC, 10 11)
		COMBO(terminal_esc, &kp LC(C), 11 12)
		COMBO(enter, &kp ENTER, 12 13)
    COMBO(albert, &kp LG(SPACE), 16 17)
    COMBO(tmux, &kp LC(B), 17 18)
    COMBO(control, &sk LCTRL, 18 19)
    // // top
    COMBO(vim_savequit,  &vim_s,  0 1)
    COMBO(vim_saveall,  &vim_wa,  1 2)
		COMBO(nvim, &nvim, 6 7)
		COMBO(lazy_git, &lazy_git,  7 8)
    // // bottom
    COMBO(vim_quit,  &vim_q,  21 22)
    COMBO(cd_downward, &dir_up, 23 24)
    COMBO(Tilde, &kp TILDE, 27 28)
    COMBO(grave, &kp GRAVE, 28 29)
    COMBO(open_gitcommit, &open_gitcommit, 29 30)
    // // bottom
    // vertical left
    COMBO(vol_up, &kp C_VOL_UP,  0 10)
		COMBO(vol_dn, &kp C_VOL_DN, 10 21)
		COMBO(singlequote, &kp SQT, 1 11)
		COMBO(doublequote, &kp DQT, 11 22)
		COMBO(colon, &kp COLON, 2 12)
		COMBO(semicolon, &kp SEMI, 12 23)
		COMBO(minus, &kp MINUS, 3 13)
		COMBO(underscore, &kp UNDER, 13 24)
		// vertical right
		COMBO(brightness_up, &kp C_BRIGHTNESS_INC, 9 19)
		COMBO(brighness_down, &kp C_BRIGHTNESS_DEC, 19 30)
		COMBO(next, &kp C_NEXT, 8 18)
		COMBO(play, &kp C_PLAY, 7 17)
		COMBO(prev, &kp C_PREV, 6 16)
		// UNUSED COMBO(, , 18 29)	
		//TODO capsword
	};
};

// IDEAS ______________
// Return (enter) on thumb cluster?
// Pageup/pagedown on nav?
// Nice bluetooth page

        keymap {
                compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                base_layer {
 label= "BASE";
 bindings = <
 //           ╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J       &kp L      &kp U      &kp Y      &kp TAB
 //           ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                &kp A      &kp R      &kp S      &kp T      &kp G          &kp M       &kp N        &kp E      &kp I     &kp O
 //           ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
      &kp Q     &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K       &kp H     &kp COMMA   &kp DOT    &kp FSLH  &sk LSHFT
 //╰──────────┴──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────┴──────────╯
                                      &kp DEL    &mo NAV 	&kp SPACE   &mt LSHFT BSPC  &mo NUM   &kp BSPC
 //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                num_layer {
 label= "NUM";
 bindings = <
 //           ╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
		            &kp DOLLAR   &kp LBRC  &kp RBRC    &kp PLUS  &kp CARET	   &kp POUND    &kp N7     &kp N8     &kp N9    &kp PERCENT
 //           ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
          			&kp LPAR   &kp EXCL   &kp EQUAL   &kp RPAR   &kp AMPS       &kp PIPE    &kp N1     &kp N2     &kp N3     &kp N0
 //           ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
		&trans       &kp LT    &kp LBKT   &kp RBKT    &kp GT    ________       &kp AT      &kp N4     &kp N5     &kp N6    &kp STAR    &trans
 //╰──────────┴──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────┴──────────╯
                                      &kp DEL    &kp LS(G) 	&kp SPACE   &mt LSHFT BSPC  &mo NUM   &kp BSPC
 //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
                      >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                nav_layer {
 label= "NAV";
 bindings = <
 //           ╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
         	      ________  &kp LG(A)   &sk LGUI   &kp LG(S)  &kp LG(W)      &kp CAPS   &kp LC(O)  &kp LC(D)  &kp LC(U)   &kp LC(I)
 //           ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
 		            &kp LEFT   &kp DOWN    &kp UP    &kp RIGHT  &kp LG(T)        ________   &kp LC(P) &kp LC(S)    &kp LG(F)  &sk LCTRL
 //           ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
		&trans      &kp LG(Z)   &kp LG(X)  &kp LG(C)  &kp LG(H)   &kp LG(V)     &kp LC(R)  ________   &sk LALT   &kp BSLH   &comment  &trans
 //╰──────────┴──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────┴──────────╯
                                      &kp DEL    &kp LS(G) 	&kp SPACE   &mt LSHFT BSPC  &mo NUM   &kp BSPC
 //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                adjust_layer {
 label= "ADJ";
 bindings = <
 //           ╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                &sys_reset  &bt BT_CLR &out OUT_TOG &trans      &trans          &trans      &kp F7      &kp F8      &kp F9      &kp F12
 //           ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                &bootloader &bt BT_NXT  &trans      &trans      &trans          &trans      &kp F4      &kp F5      &kp F6      &kp F11  
 //           ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &trans      &trans      &bt BT_PRV  &trans      &trans      &trans          &trans      &kp F1      &kp F2      &kp F3      &kp F10     &trans         
 //╰──────────┴──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────┴──────────╯
                                        &trans      &trans      &trans          &trans      &trans      &trans      
 //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        };
};
